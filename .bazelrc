# This forces Bazel's C++ rules use platforms to select toolchains instead of the default

# --crosstool_top, --compiler, etc.
build --incompatible_enable_cc_toolchain_resolution

# Dont enable Bazel's MODULE support
common --enable_bzlmod

# stdout colors
common --color=yes

# use platform config feature
common --enable_platform_specific_config

# Enable Windows symlink support
startup --windows_enable_symlinks

# Enable runfiles support
build --enable_runfiles

# Always use local mode for builds
# see https://bazel.build/docs/user-manual#spawn-strategy
build --spawn_strategy=local

# MacOS
build:macos --features=-libtool

# cxx debug build
build:debug -c dbg --copt="-g" --strip="never"
build:debug --features=oso_prefix_is_pwd

# gtest
test --test_output=errors --action_env="GTEST_COLOR=1"

# Typescript

# passes an argument `--skipLibCheck` to _every_ spawn of the TypeScript compiler, tsc
common --@aspect_rules_ts//ts:skipLibCheck=always
common --@aspect_rules_ts//ts:default_to_tsc_transpiler

# Buildbuddy setups

# build --bes_results_url=https://app.buildbuddy.io/invocation/
# build --bes_backend=grpcs://remote.buildbuddy.io
# build --remote_cache=grpcs://remote.buildbuddy.io
# build --remote_timeout=3600
# build --remote_header=x-buildbuddy-api-key=sss1R34k09KE8UtTdRta
# build --build_metadata=REPO_URL=https://github.com/johnnyxcy/hello-bazel.git
# build --experimental_remote_cache_compression
