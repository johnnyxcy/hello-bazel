"""Workspace Compatability with bzlmod support"""

# toolchain
load("@aspect_bazel_lib//lib:repositories.bzl", "register_coreutils_toolchains")

register_coreutils_toolchains()
# Python

# Load the repositories for the Python rules
load("@aspect_rules_py//py:repositories.bzl", "rules_py_dependencies")

rules_py_dependencies()

# Load the repositories for the Python rules
load("@rules_python//python:repositories.bzl", "py_repositories", "python_register_toolchains")

# Register the Python toolchains
python_register_toolchains(
    name = "python_toolchain",
    python_version = "3.11",
    register_coverage_tool = True,
)

py_repositories()

load("//tools/poetry:repositories.bzl", "poetry_lock")

# poetry.lock converted to requirements.txt
poetry_lock(
    name = "py_requirements_lock",
    groups = ["dev"],
    lockfile = "//:poetry.lock",
)

load("@python_toolchain//:defs.bzl", "interpreter")

# Load the pip_parse macro which will parse the requirements_lock.txt file
load("@rules_python//python:pip.bzl", "package_annotation", "pip_parse")

# Create a central repo that knows about the dependencies needed from
# requirements_lock.txt.
pip_parse(
    name = "pypi",
    annotations = {
        "ruff": package_annotation(
            copy_executables = {
                "bin/ruff": "ruff",
            },
        ),
    },
    python_interpreter_target = interpreter,
    requirements_lock = "@py_requirements_lock//:requirements_lock.txt",
)

# Load the starlark macro which will define your dependencies.
load("@pypi//:requirements.bzl", "install_deps")

# Call it to define repos for your requirements.
install_deps(
    python_interpreter_target = interpreter,
    quiet = False,
)

# Third Party Dependencies
load("//vendor:repository.bzl", "vendor_repository")

vendor_repository()
